name: Check file changes
on:
  schedule:
    - cron:  '0 * * * *'
  workflow_dispatch:
    inputs:
      force_check:
        description: 'Force check hash to be true'
        required: false
        default: 'false'
      send_mail:
        description: 'Send mail'
        required: false
        default: 'true'

jobs:
  check-file:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: ['android', 'ios']
        include:
          - platform: 'android'
            url: 'https://cdn.megagamelog.com/cross/release/android/curr/Custom/luascripts'
            filename: 'lua_android'
          - platform: 'ios'
            url: 'https://cdn.megagamelog.com/cross/release/ios/curr_new/Custom/luascripts'
            filename: 'lua_ios'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download file
      run: |
        curl -L -o D:/a/CrossCoreLuascripts/${{ matrix.filename }} "${{ matrix.url }}"

    - name: Calculate hash
      id: calc-hash
      shell: pwsh
      run: |
        $hash = Get-FileHash -Path D:/a/CrossCoreLuascripts/${{ matrix.filename }} -Algorithm SHA256
        Write-Host "::set-output name=hash::$($hash.Hash)"

    - name: Save hash
      run: |
        echo "${{ steps.calc-hash.outputs.hash }}" > D:/a/CrossCoreLuascripts/CrossCoreLuascripts/new-hash.txt

    - name: Check hash
      id: check-hash
      env:
        HASH: ${{ steps.calc-hash.outputs.hash }}
      run: |
        if ('${{ github.event.inputs.force_check }}' -eq 'true') {
          Move-Item -Path  D:/a/CrossCoreLuascripts/CrossCoreLuascripts/new-hash.txt D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}-hash.txt -Force
          echo "::set-output name=changed::true"
        } else {
          echo "Old hash: $(Get-Content D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}-hash.txt)"
          echo "New hash: ${env:HASH}"
          if ((Get-Content D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}-hash.txt) -ne "${env:HASH}") {
            Move-Item -Path  D:/a/CrossCoreLuascripts/CrossCoreLuascripts/new-hash.txt D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}-hash.txt -Force
            echo "::set-output name=changed::true"
          } else {
            echo "::set-output name=changed::false"
          }
        }      

    - name: Unpack and Push
      if: steps.check-hash.outputs.changed == 'true'
      run: |
        curl -L -o D:/a/CrossCoreLuascripts/studio.zip https://github.com/RazTools/Studio/releases/download/v1.00.00/net7.0-windows.zip
        Expand-Archive -Path D:/a/CrossCoreLuascripts/studio.zip -DestinationPath D:/a/CrossCoreLuascripts/studio
        git clone "https://${{ secrets.MY_TOKEN }}@github.com/AXiX-official/CrossCore-Auto-Lua.git" D:/a/CrossCoreLuascripts/tool
        python D:/a/CrossCoreLuascripts/tool/decrypt.py "D:/a/CrossCoreLuascripts/${{ matrix.filename }}"
        mkdir D:/a/CrossCoreLuascripts/lua
        D:/a/CrossCoreLuascripts/studio/AssetStudioCLI D:/a/CrossCoreLuascripts/${{ matrix.filename }}_decrypt D:/a/CrossCoreLuascripts/lua --game Normal --silent
        python D:/a/CrossCoreLuascripts/tool/sortFile.py D:/a/CrossCoreLuascripts/lua/TextAsset D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }} D:/a/CrossCoreLuascripts/tool/structure.json

    - name: Generate commit message
      if: steps.check-hash.outputs.changed == 'true'
      id: commit-message
      run: |
        $svnVersion = Select-String -Path "D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}/SvnVersion.lua" -Pattern 'g_svnVersion = "\d+' | % { $_.Matches } | % { $_.Value } | Select-String -Pattern '\d+' | % { $_.Matches } | % { $_.Value }
        $date = Get-Date -Format "yyyy/MM/dd"
        echo "::set-output name=message::[$date]-$svnVersion"

    - name: Commit changes
      if: steps.check-hash.outputs.changed == 'true'
      run: |
        cd D:/a/CrossCoreLuascripts/CrossCoreLuascripts/
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ matrix.platform }}
        git add ${{ matrix.platform }}-hash.txt
        git commit -am "${{ steps.commit-message.outputs.message }}" || true

    - name: Pull latest changes
      run: |
        git pull origin ${{ github.ref }}

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Set Mail
      if: matrix.platform == 'android'
      id: set-mail
      env:
        CHANGED: ${{ steps.check-hash.outputs.changed }}      
      run: |
        if ($env:CHANGED -eq 'true' && ${{ github.event.inputs.send_mail }} -eq 'true') {
          echo "::set-output name=send_mail::true"
        } else {
          echo "::set-output name=send_mail::false"
        }

    - name: Generate cfg vesion
      if: steps.set-mail.outputs.send_mail == 'true'
      id: cfg-version
      run: |
        $svnVersion = Select-String -Path "D:/a/CrossCoreLuascripts/CrossCoreLuascripts/${{ matrix.platform }}/SvnVersion.lua" -Pattern 'g_svnVersion = "[0-9]*' | % { $_.Matches } | % { $_.Value } | Select-String -Pattern '[0-9]*' | % { $_.Matches } | % { $_.Value }
        $date = Get-Date -Format "yyyyMMdd"
        echo "::set-output name=version::$date-$svnVersion"
        echo "Version: $date-$svnVersion"

    - name: Step for Android
      if: steps.set-mail.outputs.send_mail == 'true'
      id: step-android
      run: |
        pip install -r D:/a/CrossCoreLuascripts/tool/requirements.txt
        python D:/a/CrossCoreLuascripts/tool/2csv.py D:/a/CrossCoreLuascripts/CrossCoreLuascripts/android/cfg D:/a/CrossCoreLuascripts/cfg
        Compress-Archive -Path D:/a/CrossCoreLuascripts/cfg -DestinationPath "D:/a/CrossCoreLuascripts/cfg${{ steps.cfg-version.outputs.version }}.zip"
        echo "::set-output name=packed::true"

    - name: Send mail
      if: steps.step-android.outputs.packed == 'true'
      uses: dawidd6/action-send-mail@v2
      env:
        WORKSPACE_PATH: ${{ github.workspace }}
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_APP_PASSWORD }}
        subject: 交错战线CFG文件更新
        to: ${{ secrets.RECIPIENTS }}
        from: ${{ secrets.GMAIL_USERNAME }}
        body: "cfg${{ steps.cfg-version.outputs.version }}.zip"
        attachments: D:/a/CrossCoreLuascripts/cfg${{ steps.cfg-version.outputs.version }}.zip